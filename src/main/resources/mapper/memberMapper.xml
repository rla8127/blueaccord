<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shopping.toy.dao.memberMapper">

    <insert id="insert" parameterType="MemberDto" useGeneratedKeys="true" keyProperty="member_id">
        INSERT INTO member
        (member_id, id, name, email, password, address, phone)
        VALUES
        (#{member_id}, #{id}, #{name}, #{email}, #{password}, #{address}, #{phone})
    </insert>

    <select id="selectAll" resultType="MemberDto">
        SELECT * FROM member
    </select>

    <select id="select" parameterType="int" resultType="MemberDto">
        SELECT *
        FROM member
        WHERE member_id = #{member_id}
    </select>

    <select id="selectMemberId" parameterType="String" resultType = "int">
        SELECT member_id
        FROM member
        WHERE id = #{id}
    </select>

    <!-- 로그인 체크 시 사용, 및 세션에 특정 필드 전달용 -->
    <select id="selectById" parameterType="String" resultType="MemberDto">
        SELECT member_id, id, password, name, email, address, role, phone, reg_date
        FROM member
        WHERE id = #{id}
    </select>

    <select id="checkId" parameterType="String" resultType="int">
        SELECT count(*)
        FROM member
        WHERE id = #{id}
    </select>

    <select id="checkEmail" parameterType="String" resultType="int">
        SELECT count(*)
        FROM member
        WHERE email = #{email}
    </select>

    <select id="getUserName" parameterType="String" resultType="String">
        SELECT name FROM member WHERE id=#{id};
    </select>

    <delete id="delete" parameterType="int">
        DELETE FROM member
        WHERE member_id = #{member_id}
    </delete>

    <update id="updateMember" parameterType="MemberDto">
        UPDATE member
        SET password = #{password}, email = #{email}, address = #{address}, phone = #{phone}
        WHERE member_id=#{member_id};
    </update>

    <select id="userRole" parameterType="String" resultType="String">
        SELECT role FROM member WHERE id=#{id};
    </select>

    <select id="findUserId" parameterType="map" resultType="String">
        SELECT id FROM member WHERE name=#{name} AND email=#{email};
    </select>

    <select id="findUserPwd" parameterType="MemberDto" resultType="int">
        SELECT count(*) FROM member WHERE id=#{id} AND name=#{name} AND email=#{email};
    </select>

    <update id="updatePassword" parameterType="MemberDto">
        UPDATE member
        SET password = #{password}
        WHERE id=#{id} AND name=#{name} AND email=#{email};
    </update>

</mapper>